name: React Docker deploy and EC2 deployment

on:
  pull_request:
    types: [opened, reopened, synchronize] # Run on PR open, reopen, or sync
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Authenticate with GitHub using PAT
        run: |
          echo "${{ secrets.GH_TOKEN_REACT }}" | gh auth login --with-token

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up .env.production
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env.production

      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/react-app:latest --no-cache

      - name: List all files in Docker image
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/react-app:latest ls -R / > file_list.txt
          cat file_list.txt

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest

  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # Required for AWS authentication

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Pull Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest

      - name: SSH into EC2 and deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

          ssh -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem ubuntu@ec2-3-82-206-23.compute-1.amazonaws.com << 'EOF'

            # Add current user to docker group if not already a member
            sudo usermod -aG docker $USER 

            # Refresh the group membership in the current session
            newgrp docker  

            # Stop and remove existing container if it exists
            docker ps -q --filter "name=react-app" | grep -q . && docker stop react-app && docker rm react-app

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest

            # Run the container with environment variables passed dynamically
            docker run -d --name react-app -p 80:3000 \
              --env-file .env.production \
              ${{ secrets.DOCKER_USERNAME }}/react-app:latest

            # Check logs for verification
            docker logs react-app

          EOF
